version: '3.8'

services:
  frontend:
    container_name: 'frontend'
    build:
      context: ../../
      dockerfile: container/development/Dockerfile.frontend
    ports:
      - 8081:8081
    volumes:
      - ../../frontend:/srv/frontend
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - "postgres"
      - "keycloak"
    networks:
      - proxy-network
  backend:
    container_name: 'backend'
    build:
      context: ../../
      dockerfile: container/development/Dockerfile.backend
    ports:
      - 8082:8082
    volumes:
      - ../../backend:/srv/backend
    depends_on:
      - "postgres"
    networks:
      - proxy-network
  postgres:
    container_name: postgres
    image: 'postgres'
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=password
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - auth-network
  keycloak:
    container_name: keycloak
    image: jboss/keycloak:10.0.2
    ports: 
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      - PROXY_ADDRESS_FORWARDING=true
      - DB_VENDOR=POSTGRES
      - DB_ADDR=postgres
      - DB_PORT=5432
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_PASSWORD=password
      #- KEYCLOAK_USER=admin
      #- KEYCLOAK_PASSWORD=password
    restart: always
    networks:
      - auth-network
      - proxy-network
  nginx:
    image: nginx:latest
    container_name: nginx
    build:
      context: ./
      dockerfile: Dockerfile.nginx
    depends_on: 
      - frontend
      - backend
      - keycloak
    networks:
      - proxy-network
    ports:
      - 80:80
      - 443:443

networks:
  auth-network:
    driver: bridge
  proxy-network:
    driver: bridge

volumes:
  db_data: